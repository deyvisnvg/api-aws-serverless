# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: deyvisnvg
# "service" is the name of this project. This will also be added to your AWS resource names.
service: api-aws

provider:
  name: aws
  runtime: nodejs20.x
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-west-2:964174794181:table/personajeTable

functions:
  getSwapiPlanet:
    handler: src/functions/getSwapiPlanet/index.getSwapiPlanet
    events:
      - httpApi:
          path: /swapiPlanet/{id}
          method: get
  getSwapiPlanets:
    handler: src/functions/getSwapiPlanets/index.getSwapiPlanets
    events:
      - httpApi:
          path: /swapiPlanets
          method: get
  getSwapiSpecie:
    handler: src/functions/getSwapiSpecie/index.getSwapiSpecie
    events:
      - httpApi:
          path: /swapiSpecie/{id}
          method: get
  getSwapiSpecies:
    handler: src/functions/getSwapiSpecies/index.getSwapiSpecies
    events:
      - httpApi:
          path: /swapiSpecies
          method: get
  addPersonaje:
    handler: src/functions/addPersonaje/index.addPersonaje
    events:
      - httpApi:
          path: /personaje
          method: post
  getPersonaje:
    handler: src/functions/getPersonaje/index.getPersonaje
    events:
      - httpApi:
          path: /personaje
          method: get
  swagger:
    handler: src/functions/swagger/index.swagger
    events:
      - httpApi:
          path: /swagger
          method: get

resources:
  Resources:
    personajeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: personajeTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

plugins:
  - serverless-openapi-documentation

custom:
  openapi:
    filePath: ./config/openapi.yml
    info:
      title: Serverless API
      version: 1.0.0